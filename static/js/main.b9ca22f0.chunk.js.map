{"version":3,"sources":["utils/index.js","components/Navbar.jsx","components/Visualizer.jsx","components/Control.jsx","utils/useWindowDimensions.js","App.js","index.js"],"names":["randomArrCreate","width","length","range","randomArr","randNum","Math","floor","random","includes","push","sleep","ms","Promise","resolve","setTimeout","insertionSort","list","setNumArr","speed","setOn","on","setIndex","sorted","setSorted","a","len","i","j","temp","bubbleSort","small","big","selectionSort","merge","left","right","arr2","index","indexOf","concat","shift","splice","mergeSort","arr","StyledNavbar","styled","div","Navbar","numArr","className","onClick","disabled","window","location","reload","class","StyledVisualizer","StyledBar","num","Visualizer","map","StyledControl","Control","setSpeed","type","value","onChange","e","target","getWindowDimensions","innerWidth","height","innerHeight","useWindowDimensions","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","StyledApp","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b9ca22f0.chunk.js","sourcesContent":["export const randomArrCreate = (width) => {\r\n    let randomArr = [];\r\n    let length;\r\n    let range;\r\n    if(width < 800){\r\n        length = 20\r\n    } else {length = 50}\r\n\r\n    if(length == 20){\r\n        range = 50;\r\n    } else {\r\n        range = 100\r\n    }\r\n    while(randomArr.length < length){\r\n        let randNum = (Math.floor(Math.random() * range)) + 1;\r\n        !randomArr.includes(randNum) && randomArr.push(randNum);\r\n    }\r\n    return randomArr;\r\n}\r\n\r\nconst sleep = (ms) => {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n  }\r\n  \r\n\r\nexport const insertionSort = async(list, setNumArr, speed, setOn, on, setIndex, sorted, setSorted) => {\r\n    setOn(!on)\r\n\r\n    let len = list.length;\r\n\r\n    for(let i = 1; i < len +1; i++){\r\n\r\n        for(let j = i; j > 0; j--){\r\n            if(list[j] < list[j-1]){\r\n                setIndex(j)\r\n                let temp = list[j - 1];\r\n                list[j-1] = list[j];\r\n                list[j] = temp;\r\n                await sleep(6000 / ((speed + j + 1) * 2));\r\n                setNumArr([...list]);\r\n            }\r\n        }    \r\n    }\r\n    setOn(on)\r\n    setSorted(!sorted)\r\n}\r\nexport const bubbleSort = async(list, setNumArr, speed, setOn, on, setIndex, sorted, setSorted) => {\r\n    setOn(!on)\r\n    for(let j =0; j < list.length ; j++){\r\n\r\n        for(let i = 0; i < list.length ; i++){\r\n            if(list[i] > list[i+1]){\r\n                let small = list[i+1];\r\n                let big = list[i];\r\n                list[i+1] = big;\r\n                list[i] = small;\r\n                setIndex(i +1);\r\n                setNumArr([...list]);\r\n                await sleep(6000 / ((speed + ((1/i) * 7) + 1) * 2));\r\n            } \r\n\r\n        }\r\n    }\r\n    setOn(on)\r\n    setSorted(!sorted)\r\n}\r\n\r\nexport const selectionSort = async(list, setNumArr, speed, setOn, on, setIndex, sorted, setSorted) => {\r\n    let len = list.length;\r\n    setOn(!on)\r\n\r\n    for(let i = 0; i < len; i++){\r\n        for(let j = i; j < len; j++){\r\n            if(list[i] > list[j]){\r\n                setIndex(j);\r\n                let temp = list[i];\r\n                list[i] = list[j];\r\n                list[j] = temp;\r\n                await sleep(6000 / ((speed + j + 1) * 2));\r\n                setNumArr([...list]);\r\n            }\r\n        }\r\n    }\r\n    setOn(on)\r\n    setSorted(!sorted)\r\n}\r\n\r\n\r\nconst merge = async(left,right, arr2, setNumArr) => {\r\n    let index = arr2.indexOf((left.concat(right))[0]);\r\n    let sorted = [];\r\n\r\n    while(left.length  && right.length){\r\n        if(left[0] < right[0]){\r\n            sorted.push(left.shift())\r\n        } else {\r\n            sorted.push(right.shift())\r\n        }\r\n    }\r\n    let len = sorted.concat(left.concat(right)).length;\r\n    arr2.splice(index, len)\r\n    let temp = sorted.concat(left.concat(right))\r\n    for(let i = temp.length - 1 ; i >= 0 ; i--){\r\n        arr2.splice(index , 0,temp[i] )\r\n    }\r\n    await sleep(500)\r\n    setNumArr([...arr2])\r\n    return sorted.concat(left.concat(right))\r\n}\r\nexport const mergeSort = async(arr, arr2, setNumArr, setOn, on, setIndex, sorted, setSorted) => {\r\n\r\n    if(arr.length < 2){ \r\n        return arr;\r\n    }\r\n    let left = arr.splice(0, arr.length/2);\r\n    let right = arr; \r\n\r\n    return await merge(await mergeSort(left, arr2, setNumArr), await mergeSort(right, arr2, setNumArr), arr2,setNumArr);\r\n  \r\n\r\n}\r\n\r\n\r\n","import styled from \"styled-components\";\r\nimport { insertionSort, randomArrCreate, bubbleSort, selectionSort, mergeSort } from \"../utils/\";\r\n\r\n\r\nconst StyledNavbar = styled.div`\r\nheight: 15vh;\r\nwidth: 100%;\r\nbackground-color: #28527a;\r\n\r\n\r\n.title{\r\n    height: 50%;\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    padding-left: 10px;\r\n    text-shadow: 1px 1px 1px rgba(0,0,0,0.3);\r\n    color: #fff;\r\n    h1{\r\n        margin-top: 10px;\r\n    }\r\n}\r\n.nav{\r\n    height: 50%;    \r\n    ul{\r\n        width: 90%auto;\r\n        display: flex;\r\n        justify-content: flex-start;\r\n        align-items: center;\r\n        flex-wrap: wrap;\r\n        list-style-type: none;\r\n        \r\n        li{\r\n            margin: 0.7rem;\r\n        }\r\n    }\r\n    .btn{\r\n        padding: 0.8rem 1.8rem;\r\n        background-color: rgba(244, 209, 96, 0.8);\r\n        border: none;\r\n        border-radius: 0.5rem;\r\n        box-shadow: 2px 2px 4px 4px rgba(0,0,0,0.5);\r\n        transition: all 0.1s ease-in;\r\n    }\r\n    .btn:hover{\r\n        background-color: #fbeeac;\r\n        transform: translateY(-2px);\r\n        cursor: pointer;\r\n    }\r\n    .btn:active{\r\n    background-color: #f4d160;\r\n    box-shadow: 1px 1px 2px 2px rgba(0,0,0,0.5);\r\n    }\r\n    .btn:focus{\r\n    outline: none;\r\n    }\r\n}\r\n`\r\nconst Navbar = ({ numArr, setNumArr, speed, on, setOn, setIndex, sorted, setSorted }) => {\r\n\r\n    return(\r\n        <StyledNavbar>\r\n            <div className=\"title\">\r\n                <h1>SORTING ALGORITHMS VISUALIZER</h1>\r\n            </div>\r\n            <div className=\"nav\">\r\n                <ul>\r\n                    <li>\r\n                        <button onClick={()=>{\r\n                        setNumArr(randomArrCreate());\r\n                        setSorted(false);\r\n                        }} className=\"btn\" disabled={on}>Randomize</button>\r\n                    </li>\r\n                    <li>\r\n                        <button onClick={()=>bubbleSort([...numArr], setNumArr, speed, setOn, on, setIndex, sorted, setSorted )} className=\"btn\" disabled={on}>Bubble Sort</button>\r\n                    </li>\r\n                    <li>\r\n                        <button onClick={()=>mergeSort([...numArr],[...numArr], setNumArr, setOn, on, setIndex, sorted, setSorted )} className=\"btn\" disabled={on}>Merge Sort</button>\r\n\r\n                    </li>\r\n                    <li>\r\n                        <button onClick={()=>insertionSort([...numArr], setNumArr, speed, setOn, on, setIndex, sorted, setSorted)} className=\"btn\" disabled={on}>Insertion Sort</button>\r\n                    </li>\r\n                    <li>\r\n                        <button \r\n                        onClick={()=>selectionSort([...numArr], setNumArr, speed, setOn, on, setIndex, sorted, setSorted)} className=\"btn\" disabled={on}>Selection Sort</button>\r\n                    </li>\r\n                    <li>\r\n                        <button onClick={()=>window.location.reload()} class=\"btn\">Refresh Page</button>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </StyledNavbar>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import styled from \"styled-components\";\r\n\r\n\r\nconst StyledVisualizer = styled.div`\r\nheight: 70%;\r\nwidth: 100%;\r\nbackground-color: #8ac4d0;\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: center;\r\n.container{\r\n    height: 80%;\r\n    width:80%;\r\n    display: flex;\r\n    justify-content:space-evenly;\r\n    align-items: flex-end;\r\n    .bar-wrap{\r\n        height: 100%;\r\n        width: 1%;\r\n        display: flex;\r\n        flex-direction:column;\r\n        justify-content: flex-end;\r\n        p{\r\n            font-size: 0.6rem;\r\n            font-weight: bold;\r\n            margin-top: 5px;\r\n            text-align: center;\r\n        }\r\n\r\n    }\r\n}\r\n`\r\n\r\nconst StyledBar = styled.div`\r\n        height: ${({num}) => num && `${num}%`};\r\n        width: 100%;\r\n        /* background-color:#f4d160; */\r\n        background-color:${({index, numArr, num}) => (numArr[index] === num) ? '#ff7171' : '#f4d160'} ;\r\n        background-color:${({ sorted }) => sorted ? '#7eca9c' : ''};\r\n        box-shadow: 1px 1px 1px 1px rgba(0,0,0,0.5);\r\n` \r\nconst Visualizer = ({ numArr, index, sorted }) => {\r\n    return(\r\n        <StyledVisualizer>\r\n        <div className=\"container\">\r\n        {numArr.map((num, i)=>(\r\n                <div className=\"bar-wrap\">\r\n                <StyledBar num={num} key={i} className=\"bar\" index={index} numArr={numArr} sorted={sorted}></StyledBar>\r\n                <p>{num}</p>\r\n                </div>\r\n            ))}\r\n\r\n        </div>\r\n        </StyledVisualizer>\r\n    )\r\n}\r\n\r\nexport default Visualizer;","import { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledControl = styled.div`\r\nheight: 15%;\r\nwidth: 100%;\r\nbackground-color: #28527a;\r\ndisplay: flex;\r\njustify-content:center;\r\nalign-items:center;\r\nlabel{\r\n    font-size: 1.5rem;\r\n    margin-right: 5px;\r\n    color: #fff;\r\n\r\n}\r\n\r\ninput[type=range] {\r\n  width: 15%;\r\n  margin: 13.8px 0;\r\n  background-color: transparent;\r\n  -webkit-appearance: none;\r\n}\r\ninput[type=range]:focus {\r\n  outline: none;\r\n}\r\ninput[type=range]::-webkit-slider-runnable-track {\r\n  background: #3071a9;\r\n  border: 0.2px solid #010101;\r\n  border-radius: 1.3px;\r\n  width: 15%;\r\n  height: 8.4px;\r\n  cursor: pointer;\r\n}\r\ninput[type=range]::-webkit-slider-thumb {\r\n  margin-top: -14px;\r\n  width: 16px;\r\n  height: 36px;\r\n  background: #ffffff;\r\n  border: 1px solid #000000;\r\n  border-radius: 3px;\r\n  cursor: pointer;\r\n  -webkit-appearance: none;\r\n}\r\ninput[type=range]:focus::-webkit-slider-runnable-track {\r\n  background: #367ebd;\r\n}\r\ninput[type=range]::-moz-range-track {\r\n  background: #3071a9;\r\n  border: 0.2px solid #010101;\r\n  border-radius: 1.3px;\r\n  width: 15%;\r\n  height: 8.4px;\r\n  cursor: pointer;\r\n}\r\ninput[type=range]::-moz-range-thumb {\r\n  width: 16px;\r\n  height: 36px;\r\n  background: #ffffff;\r\n  border: 1px solid #000000;\r\n  border-radius: 3px;\r\n  cursor: pointer;\r\n}\r\ninput[type=range]::-ms-track {\r\n  background: transparent;\r\n  border-color: transparent;\r\n  border-width: 14.8px 0;\r\n  color: transparent;\r\n  width: 15%;\r\n  height: 8.4px;\r\n  cursor: pointer;\r\n}\r\ninput[type=range]::-ms-fill-lower {\r\n  background: #2a6495;\r\n  border: 0.2px solid #010101;\r\n  border-radius: 2.6px;\r\n}\r\ninput[type=range]::-ms-fill-upper {\r\n  background: #3071a9;\r\n  border: 0.2px solid #010101;\r\n  border-radius: 2.6px;\r\n}\r\ninput[type=range]::-ms-thumb {\r\n  width: 16px;\r\n  height: 36px;\r\n  background: #ffffff;\r\n  border: 1px solid #000000;\r\n  border-radius: 3px;\r\n  cursor: pointer;\r\n  margin-top: 0px;\r\n}\r\n.details{\r\n  width: 60%;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items:center;\r\n  justify-content:center;\r\n  color : #fff;\r\n\r\n  h3{\r\n    font-weight: 100;\r\n\r\n  }\r\n  .sections{\r\n    width:15%;\r\n    height: 80%;\r\n  } \r\n  .sections:first-child{\r\n    width:30%;\r\n\r\n  }\r\n  @media(max-width:768px){\r\n    display:none;\r\n  }\r\n}\r\n\r\n`\r\nconst Control = ({ speed, setSpeed, on }) => {\r\n\r\n    const handleChange = (e) => {\r\n        setSpeed(e.target.value)\r\n    }\r\n    return(\r\n        <StyledControl>\r\n            <label>Change Animation Speed</label>\r\n            <input type=\"range\" value={speed} onChange={handleChange} disabled={on}></input>\r\n            <div className=\"details\">\r\n              <div className=\"sections\">\r\n                <h3>Performance</h3>\r\n                <h3>Worst-case time complexity</h3>\r\n                <h3>Average time complexity</h3>\r\n                <h3>Best-case time complexity</h3>\r\n                <h3>Worst-case space complexity</h3>\r\n              </div>\r\n              <div className=\"sections\">\r\n                <h3>Bubble Sort</h3>\r\n                <h3>O(n<sup>2</sup>)</h3>\r\n                <h3>O(n<sup>2</sup>)</h3>\r\n                <h3>O(n)</h3>\r\n                <h3>O(1)</h3>\r\n              </div>\r\n              <div className=\"sections\">\r\n                <h3>Merge Sort</h3>\r\n                <h3>O(n log n)</h3>\r\n                <h3>O(n log n)</h3>\r\n                <h3>O(n log n)</h3>\r\n                <h3>O(n)</h3>\r\n              </div>\r\n              <div className=\"sections\">\r\n                <h3>Insertion Sort</h3>\r\n                <h3>O(n<sup>2</sup>)</h3>\r\n                <h3>O(n<sup>2</sup>)</h3>\r\n                <h3>O(n)</h3>\r\n                <h3>O(1)</h3>\r\n              </div>\r\n              <div className=\"sections\">\r\n                <h3>Selection Sort</h3>\r\n                <h3>O(n<sup>2</sup>)</h3>\r\n                <h3>O(n<sup>2</sup>)</h3>\r\n                <h3>O(n<sup>2</sup>)</h3>\r\n                <h3>O(1)</h3>\r\n              </div>\r\n\r\n            </div>\r\n        </StyledControl>\r\n    )\r\n}\r\n\r\nexport default Control;","import { useEffect, useState} from \"react\";\r\nfunction getWindowDimensions() {\r\n    const { innerWidth: width, innerHeight: height } = window;\r\n    return {\r\n      width,\r\n      height\r\n    };\r\n  }\r\n  \r\nfunction useWindowDimensions() {\r\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n  \r\n    useEffect(() => {\r\n      function handleResize() {\r\n        setWindowDimensions(getWindowDimensions());\r\n      }\r\n  \r\n      window.addEventListener('resize', handleResize);\r\n      return () => window.removeEventListener('resize', handleResize);\r\n    }, []);\r\n  \r\n    return windowDimensions;\r\n  }\r\n\r\n  export default useWindowDimensions;","import { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Visualizer from \"./components/Visualizer\"; \r\nimport Control from \"./components/Control\"; \r\nimport { randomArrCreate } from \"./utils/\";\r\nimport useWindowDimensions from \"./utils/useWindowDimensions\"\r\n\r\nconst StyledApp = styled.div`\r\n\r\nheight: 100vh;\r\nwidth: 100%;\r\nbackground-color: #8ac4d0;\r\n\r\n`\r\nfunction App() {\r\n\r\n  const { height, width } = useWindowDimensions();\r\n  const [numArr, setNumArr] = useState(randomArrCreate(width));\r\n  const [speed, setSpeed] = useState(50);\r\n  const [on, setOn] = useState(false);\r\n  const [index, setIndex] = useState(0);\r\n  const [sorted, setSorted] = useState(false);\r\n  \r\n \r\n  return (\r\n    <StyledApp>\r\n      <Navbar numArr={numArr} setNumArr={setNumArr} speed={speed} on={on} setOn={setOn} setIndex={setIndex} sorted={sorted} setSorted={setSorted}/>\r\n      <Visualizer numArr={numArr} index={index} sorted={sorted}/>\r\n      <Control speed={speed} setSpeed={setSpeed} on={on}/>\r\n    </StyledApp>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}